N-Blog cont.

几个常用的 req 的属性：
req.query: 解析后的 url 中的 querystring，
如 ?name=haha，req.query 的值为 {name: 'haha'}
req.params: 解析 url 中的占位符，
如 /:name，访问 /haha，req.params 的值为 {name: 'haha'}
req.body: 解析后请求体，需使用相关的模块，
如 body-parser，请求体为 {"name": "haha"}，
则 req.body 为 {name: 'haha'}

在实际开发中通常有几十甚至上百的路由，
都写在 index.js 既臃肿又不好维护，这时可以
使用 express.Router 实现更优雅的路由解决方案。
在 bradsblog 目录下创建空文件夹 routes，
在 routes 目录下创建 index.js 和 users.js

模板引擎（Template Engine）是一个将页面模板和数据结合起来生成 html 的工具
ejs 是其中一种，因为它使用起来十分简单，而且与 express 集成良好，所以我们使用 ejs

res.render 的作用就是将模板和数据结合生成 html，同时设置响应头中的 Content-Type: text/html，
告诉浏览器我返回的是 html，不是纯文本，要按 html 展示

ejs 有 3 种常用标签：
<% code %>：运行 JavaScript 代码，不输出
<%= code %>：显示转义后的 HTML内容
<%- code %>：显示原始 HTML 内容
// 当 code 比如为 <h1>hello</h1> 这种字符串时，
// <%= code %> 会原样输出 <h1>hello</h1>，而 <%- code %> 则会显示 H1 大的 hello 字符串

我们使用模板引擎通常不是一个页面对应一个模板，这样就失去了模板的优势，
而是把模板拆成可复用的模板片段组合使用，如在 views 下新建 header.ejs 和 footer.ejs

express 中的中间件（middleware）就是用来处理请求的，当一个中间件处理完，可以通过调用 next() 传递给下一个中间件，
如果没有调用 next()，则请求不会往下传递，如内置的 res.render 其实就是渲染完 html 直接返回给客户端，没有调用 next()，从而没有传递给下一个中间件
